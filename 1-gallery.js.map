{"version":3,"file":"1-gallery.js","sources":["../src/js/gallery/pixabay-api.js","../src/js/gallery/render-functions.js","../src/js/gallery/gallery-main.js"],"sourcesContent":["import axios from 'axios';\n\n// Функция запроса на бэкенд\nexport function fetchData(query) {\n  const BASE_URL = 'https://pixabay.com/api/';\n  const API_KEY = '50268892-929648ae4af930c873d247de9';\n\n  return axios\n    .get(BASE_URL, {\n      params: {\n        key: API_KEY,\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n      },\n    })\n    .then(response => {\n      return response.data;\n    });\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst galleryContainer = document.querySelector('.gallery');\nconst loaderEl = document.querySelector('.loader');\n\n//Создание экземпляра модельного окна SimpleLightbox с дополнительными настройками\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionPosition: 'bottom',\n  captionDelay: 250,\n});\n\n// Функция рендера изображений\nfunction createGallery(images) {\n  const galleryMarkup = images\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        return `\n<li class=\"gallery-item\">\n  <a class=\"gallery-link\" href=\"${largeImageURL}\">\n    <img class=\"gallery-image\" src=\"${webformatURL}\" alt=\"${tags}\" />\n    <ul class=\"gallery-analytics\">\n      <li class=\"gallery-counters\">\n        <h1>Likes</h1>\n        ${likes}\n      </li>\n      <li class=\"gallery-counters\">\n        <h1>Views</h1>\n        ${views}\n      </li>\n      <li class=\"gallery-counters\">\n        <h1>Comments</h1>\n        ${comments}\n      </li>\n      <li class=\"gallery-counters\">\n        <h1>Downloads</h1>\n        ${downloads}\n      </li>\n    </ul>\n  </a>\n</li>\n\n  `;\n      }\n    )\n    .join('');\n\n  // Добавляем карточки в контейнер галереи\n  galleryContainer.insertAdjacentHTML('beforeend', galleryMarkup);\n\n  // Метод удаления и повторной инициализации лайтбокса\n  lightbox.refresh();\n}\n\n// Функция очистки контейнера галереи\nfunction clearGallery() {\n  galleryContainer.innerHTML = '';\n}\n\n// Функция отображения Loader\nfunction showLoader() {\n  loaderEl.classList.add('active');\n}\n\n// Функция скрывания Loader\nfunction hideLoader() {\n  loaderEl.classList.remove('active');\n}\n\nexport { createGallery, clearGallery, showLoader, hideLoader };\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport { fetchData } from './pixabay-api';\nimport {\n  createGallery,\n  clearGallery,\n  showLoader,\n  hideLoader,\n} from './render-functions';\nimport '../../css/styles.css';\n\nconst formEl = document.querySelector('.form');\n\n// Вешаем на форму слушатель события submit\nformEl.addEventListener('submit', onFormSubmit);\n\n// Функция - обработчик слушателя события формы\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  // Очищаем галерею\n  clearGallery();\n\n  // Показываем Loader\n  showLoader();\n\n  // Сохраняем в переменную данные из инпута\n  const searchInput = evt.currentTarget.elements['search-text'].value.trim();\n\n  // Обрабатываем промис функции запроса на бэкенд\n  fetchData(searchInput)\n    .then(response => {\n      // Если ответ пришёл с ошибкой\n      if (response.hits.length === 0) {\n        // Вызов нотификации\n        iziToastOptions(\n          'Sorry, there are no images matching your search query. Please try again!',\n          'pink'\n        );\n      }\n      // Создаём галерю с данными из бэкенда\n      createGallery(response.hits);\n      // Очищаем инпут\n      formEl.reset();\n    })\n    .catch(error => {\n      console.log(error);\n    })\n    .finally(() => {\n      // Скрываем Loader\n      hideLoader();\n    });\n}\n\n// Опции подключенного через библиотеку alert\nfunction iziToastOptions(message, backgroundColor) {\n  return iziToast.show({\n    message,\n    messageColor: '#ff0000',\n    backgroundColor,\n    icon: '\tfa fa-ban',\n    iconColor: '#8b0000',\n    position: 'topRight',\n  });\n}\n"],"names":["fetchData","query","axios","response","galleryContainer","loaderEl","lightbox","SimpleLightbox","createGallery","images","galleryMarkup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearGallery","showLoader","hideLoader","formEl","onFormSubmit","evt","searchInput","iziToastOptions","error","message","backgroundColor","iziToast"],"mappings":"kGAGO,SAASA,EAAUC,EAAO,CAI/B,OAAOC,EACJ,IAJc,2BAIA,CACb,OAAQ,CACN,IALU,qCAMV,EAAGD,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACb,CACF,CAAA,EACA,KAAKE,GACGA,EAAS,IACjB,CACL,CCjBA,MAAMC,EAAmB,SAAS,cAAc,UAAU,EACpDC,EAAW,SAAS,cAAc,SAAS,EAG3CC,EAAW,IAAIC,EAAe,aAAc,CAChD,aAAc,MACd,gBAAiB,SACjB,aAAc,GAChB,CAAC,EAGD,SAASC,EAAcC,EAAQ,CAC7B,MAAMC,EAAgBD,EACnB,IACC,CAAC,CACC,aAAAE,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IACe;AAAA;AAAA,kCAEmBL,CAAa;AAAA,sCACTD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA,UAItDC,CAAK;AAAA;AAAA;AAAA;AAAA,UAILC,CAAK;AAAA;AAAA;AAAA;AAAA,UAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,UAIRC,CAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAQnB,EACK,KAAK,EAAE,EAGVb,EAAiB,mBAAmB,YAAaM,CAAa,EAG9DJ,EAAS,QAAS,CACpB,CAGA,SAASY,GAAe,CACtBd,EAAiB,UAAY,EAC/B,CAGA,SAASe,GAAa,CACpBd,EAAS,UAAU,IAAI,QAAQ,CACjC,CAGA,SAASe,GAAa,CACpBf,EAAS,UAAU,OAAO,QAAQ,CACpC,CChEA,MAAMgB,EAAS,SAAS,cAAc,OAAO,EAG7CA,EAAO,iBAAiB,SAAUC,CAAY,EAG9C,SAASA,EAAaC,EAAK,CACzBA,EAAI,eAAgB,EAGpBL,EAAc,EAGdC,EAAY,EAGZ,MAAMK,EAAcD,EAAI,cAAc,SAAS,aAAa,EAAE,MAAM,KAAM,EAG1EvB,EAAUwB,CAAW,EAClB,KAAKrB,GAAY,CAEZA,EAAS,KAAK,SAAW,GAE3BsB,EACE,2EACA,MACD,EAGHjB,EAAcL,EAAS,IAAI,EAE3BkB,EAAO,MAAO,CACf,CAAA,EACA,MAAMK,GAAS,CACd,QAAQ,IAAIA,CAAK,CAClB,CAAA,EACA,QAAQ,IAAM,CAEbN,EAAY,CAClB,CAAK,CACL,CAGA,SAASK,EAAgBE,EAASC,EAAiB,CACjD,OAAOC,EAAS,KAAK,CACnB,QAAAF,EACA,aAAc,UACd,gBAAAC,EACA,KAAM,aACN,UAAW,UACX,SAAU,UACd,CAAG,CACH"}